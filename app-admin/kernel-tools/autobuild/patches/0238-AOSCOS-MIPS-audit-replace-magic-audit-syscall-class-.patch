From 16619977d7d139dd788c955b00f0de105e83df34 Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Tue, 10 Dec 2024 16:39:13 +0800
Subject: [PATCH 238/301] AOSCOS: MIPS: audit: replace magic audit syscall
 class numbers with macros

Follow commit 42f355ef59a2 ("audit: replace magic audit syscall class
numbers with macros") and replace all magic numbers in MIPS audit code.

Signed-off-by: Mingcong Bai <jeffbai@aosc.io>

Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 arch/mips/kernel/audit-n32.c    |  6 +++---
 arch/mips/kernel/audit-native.c |  8 ++++----
 arch/mips/kernel/audit-o32.c    | 10 +++++-----
 include/linux/audit_arch.h      |  3 +++
 kernel/auditsc.c                |  2 +-
 5 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/arch/mips/kernel/audit-n32.c b/arch/mips/kernel/audit-n32.c
index 2e9ac29588c8..8d114bf85425 100644
--- a/arch/mips/kernel/audit-n32.c
+++ b/arch/mips/kernel/audit-n32.c
@@ -35,11 +35,11 @@ int audit_classify_syscall_n32(int abi, unsigned syscall)
 {
 	switch (syscall) {
 	case __NR_open:
-		return 2;
+		return AUDITSC_OPEN;
 	case __NR_openat:
-		return 3;
+		return AUDITSC_OPENAT;
 	case __NR_execve:
-		return 5;
+		return AUDITSC_EXECVE;
 	default:
 		return 0;
 	}
diff --git a/arch/mips/kernel/audit-native.c b/arch/mips/kernel/audit-native.c
index 88e283f8df38..4a0fecd0e486 100644
--- a/arch/mips/kernel/audit-native.c
+++ b/arch/mips/kernel/audit-native.c
@@ -45,20 +45,20 @@ int audit_classify_syscall(int abi, unsigned syscall)
 
 	switch (syscall) {
 	case __NR_open:
-		res = 2;
+		res = AUDITSC_OPEN;
 		break;
 
 	case __NR_openat:
-		res = 3;
+		res = AUDITSC_OPEN;
 		break;
 
 #ifdef __NR_socketcall		/* Only exists on O32 */
 	case __NR_socketcall:
-		res = 4;
+		res = AUDITSC_SOCKETCALL;
 		break;
 #endif
 	case __NR_execve:
-		res = 5;
+		res = AUDITSC_EXECVE;
 		break;
 	default:
 #ifdef CONFIG_AUDITSYSCALL_O32
diff --git a/arch/mips/kernel/audit-o32.c b/arch/mips/kernel/audit-o32.c
index 6bf302c04e5d..818f91ce14ac 100644
--- a/arch/mips/kernel/audit-o32.c
+++ b/arch/mips/kernel/audit-o32.c
@@ -35,15 +35,15 @@ int audit_classify_syscall_o32(int abi, unsigned syscall)
 {
 	switch (syscall) {
 	case __NR_open:
-		return 2;
+		return AUDITSC_OPEN;
 	case __NR_openat:
-		return 3;
+		return AUDITSC_OPENAT;
 	case __NR_socketcall:
-		return 4;
+		return AUDITSC_SOCKETCALL;
 	case __NR_execve:
-		return 5;
+		return AUDITSC_EXECVE;
 	default:
-		return 0;
+		return AUDITSC_NATIVE;
 	}
 }
 
diff --git a/include/linux/audit_arch.h b/include/linux/audit_arch.h
index 0e34d673ef17..0436757bfc33 100644
--- a/include/linux/audit_arch.h
+++ b/include/linux/audit_arch.h
@@ -17,6 +17,9 @@ enum auditsc_class_t {
 	AUDITSC_SOCKETCALL,
 	AUDITSC_EXECVE,
 	AUDITSC_OPENAT2,
+#ifdef CONFIG_MIPS
+	AUDITSC_MIPS_N32,
+#endif
 
 	AUDITSC_NVALS /* count */
 };
diff --git a/kernel/auditsc.c b/kernel/auditsc.c
index 079b24df3ba3..b240756e0c21 100644
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@ -190,7 +190,7 @@ static int audit_match_perm(struct audit_context *ctx, int mask)
 	case AUDITSC_OPENAT2:
 		return mask & ACC_MODE((u32)ctx->openat2.flags);
 #ifdef CONFIG_MIPS
-	case 6: /* for N32 */
+	case AUDITSC_MIPS_N32: /* for N32 */
 		if ((mask & AUDIT_PERM_WRITE) &&
 		     audit_match_class(AUDIT_CLASS_WRITE_N32, n))
 			return 1;
-- 
2.48.1

