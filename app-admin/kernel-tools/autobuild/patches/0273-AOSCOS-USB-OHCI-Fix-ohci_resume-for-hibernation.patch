From f0d1fc40802b60ee7f4b1eb023687c9a306d5686 Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Sat, 24 Nov 2018 15:28:13 +0800
Subject: [PATCH 273/301] AOSCOS: USB: OHCI: Fix ohci_resume() for hibernation

During hibernation restore, some OHCI controllers (such as in AMD RS780
and Loongson LS7A) may generate RHSC interrupt. Once RHSC interrupt
occurs, it will be NOT really handled (just return IRQ_NOTMINE) by
ohci_irq() because of OHCI_RH_HALTED at that time, until HCR command
done.

So we turn off MIE before OHCI reset to prevent from possible interrupt
so that to reset safely. MIE will be enabled later in ohci_rh_resume(),
and as a result this patch is also suitable for controllers without
this trouble.

Signed-off-by: Huacai Chen <chenhc@lemote.com>
Signed-off-by: Jianmin Lv <lvjianmin@loongson.cn>

Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/usb/host/ohci-hcd.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/host/ohci-hcd.c b/drivers/usb/host/ohci-hcd.c
index 9b24181fee60..f9adf45938c5 100644
--- a/drivers/usb/host/ohci-hcd.c
+++ b/drivers/usb/host/ohci-hcd.c
@@ -1138,8 +1138,10 @@ int ohci_resume(struct usb_hcd *hcd, bool hibernated)
 	set_bit(HCD_FLAG_HW_ACCESSIBLE, &hcd->flags);
 
 	/* Make sure resume from hibernation re-enumerates everything */
-	if (hibernated)
+	if (hibernated) {
+		ohci_writel(ohci, OHCI_INTR_MIE, &ohci->regs->intrdisable);
 		ohci_usb_reset(ohci);
+	}
 
 	/* See if the controller is already running or has been reset */
 	ohci->hc_control = ohci_readl(ohci, &ohci->regs->control);
-- 
2.48.1

