From b0881fd9d54204e8951192d2d2a1d3733aabf6b0 Mon Sep 17 00:00:00 2001
From: Kexy Biscuit <kexybiscuit@aosc.io>
Date: Mon, 23 Dec 2024 19:06:09 +0800
Subject: [PATCH 294/301] AOSCOS: mips, crash: wrap more crash dumping code
 into crash related ifdefs

In
85fcde402db1 ("kexec: split crashkernel reservation code out from crash_core.c"),
crashk_res was moved from kernel/crash_core.c to kernel/crash_reserve.c.

When CONFIG_CRASH_DUMP is set to no, CONFIG_CRASH_RESERVE won't be
selected either, so kernel/crash_reserve.c will not be built.

In
d739f190c035 ("mips, crash: wrap crash dumping code into crash related ifdefs"),
code using symbols in kernel/crash_reserve.c are optimized out by
if (!IS_ENABLED(CONFIG_CRASH_RESERVE)) statements, adding another if
statement to fix the symbol left behind.

Fixes: 85fcde402db1 ("kexec: split crashkernel reservation code out from crash_core.c")
Fixes: d739f190c035 ("mips, crash: wrap crash dumping code into crash related ifdefs")
Fixes: "BACKPORT: FROMLIST: MIPS: Reserve extra memory for crash dump"
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 arch/mips/kernel/setup.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c
index 291058815450..caf0601730e3 100644
--- a/arch/mips/kernel/setup.c
+++ b/arch/mips/kernel/setup.c
@@ -622,7 +622,9 @@ static void __init bootcmdline_init(void)
  * is more than 1GB, we reserve the top 128MB for the crash kernel */
 static void reserve_crashm_region(int node, unsigned long s0, unsigned long e0)
 {
-#ifdef CONFIG_KEXEC
+	if (!IS_ENABLED(CONFIG_CRASH_RESERVE))
+		return;
+
 	if (crashk_res.start == crashk_res.end)
 		return;
 
@@ -632,7 +634,6 @@ static void reserve_crashm_region(int node, unsigned long s0, unsigned long e0)
 	s0 = e0 - (SZ_128M >> PAGE_SHIFT);
 
 	memblock_reserve(PFN_PHYS(s0), (e0 - s0) << PAGE_SHIFT);
-#endif
 }
 
 static void reserve_oldmem_region(int node, unsigned long s0, unsigned long e0)
-- 
2.48.1

