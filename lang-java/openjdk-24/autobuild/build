##### Control part variables
EXTRA_FEATURES="jfr"
OPENJDK_SUFFIX="-24"

##### Archtecture mapping
[ "${CROSS:-$ARCH}" = "amd64" ] && export ADOPTIUM_ARCH="x64" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "armv4" ] && export ADOPTIUM_ARCH="aarch32" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "armv6hf" ] && export ADOPTIUM_ARCH="aarch32" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "armv7hf" ] && export ADOPTIUM_ARCH="aarch32" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "arm64" ] && export ADOPTIUM_ARCH="aarch64" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "mipsel" ] && export ADOPTIUM_ARCH="mipsel"
[ "${CROSS:-$ARCH}" = "powerpc" ] && export ADOPTIUM_ARCH="ppc"
[ "${CROSS:-$ARCH}" = "ppc64el" ] && export ADOPTIUM_ARCH="ppc64le" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "loongson3" ] && export DEBIAN_ARCH="mips64el"
[ "${CROSS:-$ARCH}" = "riscv64" ] && export DEBIAN_ARCH="riscv64" JDK_HAS_JIT=y
[ "${CROSS:-$ARCH}" = "loongarch64" ] && export LOONGARCH64_BOOT="y" JDK_HAS_JIT=y

if [[ -z "${JDK_HAS_JIT:-}" ]]; then
    config_zero="--with-jvm-variants=zero --enable-precompiled-headers"
else
    config_zero=" "
    EXTRA_FEATURES+=",shenandoahgc,zgc"
fi

if [[ "${CROSS:-$ARCH}" = "armv7hf" ]]; then
    config_bits="--host=armv7a-hardfloat-linux-gnueabi --build=armv7a-hardfloat-linux-gnueabi"
fi

unset JAVA_HOME
unset _JAVA_OPTIONS

abinfo "Configuring OpenJDK ${PKGVER} ..."
install -dv -m 755 "$SRCDIR"/image
sh "$SRCDIR"/configure \
    --prefix="$SRCDIR"/image \
    --with-conf-name=aosc \
    --with-version-pre='' \
    --with-version-opt="AOSC" \
    --with-stdc++lib=dynamic \
    --disable-warnings-as-errors \
    --enable-unlimited-crypto \
    --enable-linktime-gc \
    --with-zlib=system \
    --with-libpng=system \
    --with-libjpeg=system \
    --with-giflib=system \
    ${config_zero} \
    ${config_bits} \
    --with-jvm-features="${EXTRA_FEATURES}" \
    --enable-precompiled-headers \
    --with-extra-cxxflags="${EXTRA_CPP_FLAGS}" \
    --with-extra-cflags="${EXTRA_CFLAGS}" \
    --with-extra-ldflags="${LDFLAGS}" \
    --with-vendor-bug-url="https://github.com/AOSC-Dev/aosc-os-abbs/issues" \
    --with-vendor-vm-bug-url="https://github.com/AOSC-Dev/aosc-os-abbs/issues" \
    --with-native-debug-symbols=zipped

abinfo "Building OpenJDK ..."
make product-images docs JOBS="$(nproc)"

mkdir -pv "$PKGDIR"/usr/lib/java
mkdir -pv "$PKGDIR/etc/"
install -dv -m 755 "$PKGDIR"/usr/share/doc

IMAGE_FOLDER=build/aosc/images/
abinfo "Copying JDK images ..."
cp -rv "${IMAGE_FOLDER}"/jdk/* "$PKGDIR"/usr/lib/java/
cp -rv "${IMAGE_FOLDER}"/docs "$PKGDIR"/usr/share/doc/openjdk/
mv -v "$PKGDIR"/usr/lib/java/conf "$PKGDIR"/etc/openjdk/
ln -sv /etc/openjdk"$OPENJDK_SUFFIX"/ "$PKGDIR"/usr/lib/java/conf

if [[ -e "$PKGDIR"/usr/lib/java/man ]]; then
    abinfo "Installing man pages ..."
    mv -v "$PKGDIR"/usr/lib/java/man "$PKGDIR"/usr/share/man
    ln -sv /usr/share/man "$PKGDIR"/usr/lib/java/man
    find "$PKGDIR"/usr/share/man -type l -delete
else
    abinfo "Man pages are not generated, skipping ..."
fi

find "$PKGDIR" -iname '*.diz' -exec rm {} \;
find "$PKGDIR" -iname '*.debuginfo' -exec rm {} \;

mkdir -p "$PKGDIR"/usr/src/openjdk
mv "$PKGDIR"/usr/lib/java/lib/src.zip "$PKGDIR"/usr/src/openjdk/src.zip
ln -sv /usr/src/openjdk"$OPENJDK_SUFFIX"/src.zip "$PKGDIR"/usr/lib/java/lib/src.zip

mkdir -p "$PKGDIR"/etc/ssl/certs/java
mv -v "$PKGDIR"/usr/lib/java/lib/security/cacerts "$PKGDIR"/etc/ssl/certs/java/

ln -sfv /etc/ssl/certs/java"$OPENJDK_SUFFIX"/cacerts "$PKGDIR"/usr/lib/java/lib/security/cacerts

if [[ -n "$OPENJDK_SUFFIX" ]]; then
    abinfo "Renaming for openjdk suffix ..."
    for path in "$PKGDIR"{/etc/openjdk,/usr/lib/java,/etc/ssl/certs/java,/usr/share/doc/openjdk,/usr/src/openjdk}; do
        mv -vf "$path" "$path""$OPENJDK_SUFFIX"
    done
    if [[ -e "$PKGDIR"/usr/share/man/man1 ]]; then
        mv -vf "$PKGDIR"/usr/share/man/man1 "$PKGDIR"/usr/share/man/man1openjdk"$OPENJDK_SUFFIX"
    fi
fi

abinfo "Generating conffiles ..."
pushd "$PKGDIR" || exit
while read -r path; do
    printf '/%s\n' "$path" >>"$SRCDIR"/autobuild/conffiles
done < <(find etc/openjdk"$OPENJDK_SUFFIX" -type f)
popd || exit

unset ADOPTIUM_ARCH ALPINE_ARCH DEBIAN_ARCH LOONGARCH64_BOOT JDKBOOTDIR
